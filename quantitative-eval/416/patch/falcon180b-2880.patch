 
    
    --- falcon180b-2880.c
    +++ falcon180b-2880-fixed.c
    @@ -11,6 +11,7 @@

     int clients[MAX_CLIENTS];
     pthread_mutex_t clients_mutex = PTHREAD_MUTEX_INITIALIZER;
    +int active_threads = 0;

     void *thread_handler(void *arg) {
         int client_socket = *(int *) arg;
         char message[MAX_MESSAGE_SIZE];
    @@ -20,6 +21,10 @@
         while (1) {
             memset(message, 0, MAX_MESSAGE_SIZE);
             int bytes_received = recv(client_socket, message, MAX_MESSAGE_SIZE, 0);

    +        if (bytes_received <= 0) {
    +            break;
    +        }
    +
             send(client_socket, message, bytes_received, 0);
         }

        close(client_socket);
    +    pthread_mutex_lock(&clients_mutex);
    +    active_threads--;
    +    pthread_mutex_unlock(&clients_mutex);
         return NULL;
     }

    @@ -39,11 +44,17 @@
         }

         while (1) {
             int client_socket = accept(server_socket, NULL, NULL);
    @@ -54,10 +65,17 @@
                     clients[i] = client_socket;
                     pthread_t thread_id;
                     pthread_create(&thread_id, NULL, thread_handler, (void *) &client_socket);
    +                pthread_detach(thread_id);
    +                pthread_mutex_lock(&clients_mutex);
    +                active_threads++;
    +                pthread_mutex_unlock(&clients_mutex);
                     break;
                 }
             }
    +        pthread_mutex_lock(&clients_mutex);
             if (i == MAX_CLIENTS - 1) {
                 printf("Max clients reached. Connection refused.\n");
                 close(client_socket);
             }
    +        pthread_mutex_unlock(&clients_mutex);
         }

    +    pthread_mutex_destroy(&clients_mutex);
         close(server_socket);
         return 0;
     }
    
    